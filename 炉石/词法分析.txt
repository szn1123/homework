ERROR	#
ID	include
<	<
ID	iostream
>	>
ERROR	#
ID	include
<	<
ID	cstdio
>	>
ID	using
ID	namespace
ID	std
;	;
int	int
ID	main
(	(
)	)
{	{
int	int
ID	n
;	;
int	int
ID	a1
,	,
ID	a2
,	,
ID	h1
,	,
ID	h2
;	;
/	/
/	/
ID	freopen
(	(
ERROR	"
ID	in
ERROR	.
ID	txt
ERROR	"
,	,
ERROR	"
ID	r
ERROR	"
,	,
ID	stdin
)	)
;	;
while	while
(	(
ID	scanf
(	(
ERROR	"
ERROR	%
ID	d
ERROR	"
,	,
ERROR	&
ID	n
)	)
!=	!=
ID	EOF
)	)
{	{
for	for
(	(
int	int
ID	i
=	=
NUM	0
;	;
ID	i
<	<
ID	n
;	;
ID	i
+	+
+	+
)	)
{	{
ID	scanf
(	(
ERROR	"
ERROR	%
ID	d
ERROR	%
ID	d
ERROR	%
ID	d
ERROR	%
ID	d
ERROR	"
,	,
ERROR	&
ID	a1
,	,
ERROR	&
ID	h1
,	,
ERROR	&
ID	a2
,	,
ERROR	&
ID	h2
)	)
;	;
if	if
(	(
ID	a1
==	==
NUM	0
)	)
{	{
ID	printf
(	(
ERROR	"
ID	Invalid
ERROR	\
ID	n
ERROR	"
)	)
;	;
ID	continue
;	;
}	}
else	else
if	if
(	(
ID	h1
-	-
ID	a2
>	>
NUM	0
)	)
ID	printf
(	(
ERROR	"
ERROR	%
ID	d
ERROR	%
ID	d
ERROR	"
,	,
ID	a1
,	,
ID	h1
-	-
ID	a2
)	)
;	;
else	else
ID	printf
(	(
ERROR	"
ID	Discard
ERROR	"
)	)
;	;
if	if
(	(
ID	h2
-	-
ID	a1
>	>
NUM	0
)	)
ID	printf
(	(
ERROR	"
ERROR	%
ID	d
ERROR	%
ID	d
ERROR	\
ID	n
ERROR	"
,	,
ID	a2
,	,
ID	h2
-	-
ID	a1
)	)
;	;
else	else
ID	printf
(	(
ERROR	"
ID	Discard
ERROR	\
ID	n
ERROR	"
)	)
;	;
}	}
}	}
ID	return
NUM	0
;	;
}	}
ERROR	ÿ
